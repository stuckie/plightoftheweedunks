<Shader>
	<Context id="AMBIENT">
		<VertexShader>
			<InsCode code="utilityLib/vertCommon.glsl" />
			<InsCode code="utilityLib/vertSkinning.glsl" />
			<DefCode>
			<![CDATA[
				attribute vec2 texCoords0;
				attribute vec3 normal;
				varying vec4 pos;
				varying vec2 texCoords;
				varying vec3 tsbNormal;

				void main( void )
				{
					// Calculate skinning matrices
					mat4 skinningMat = calcSkinningMat();
					mat3 skinningMatVec = getSkinningMatVec( skinningMat );

					// Calculate tangent space basis
					tsbNormal = calcWorldVec( skinVec( normal, skinningMatVec ) );

					// Calculate world and view space positions
					pos = calcWorldPos( skinPos( gl_Vertex, skinningMat ) );

					// Calculate texture coordinates and clip space position
					texCoords = texCoords0;
					gl_Position = gl_ModelViewProjectionMatrix * pos;
				}
			]]>
			</DefCode>
		</VertexShader>
		
		<FragmentShader>
			<DefCode>
			<![CDATA[
				uniform sampler2D tex0;
				uniform samplerCube tex7;
				varying vec3 tsbNormal;
				varying vec2 texCoords;
				
				void main( void )
				{
					vec4 albedo = texture2D( tex0, texCoords );					
					gl_FragColor.rgb = albedo.rgb;
				}
			]]>
			</DefCode>
		</FragmentShader>
	</Context>
</Shader>
